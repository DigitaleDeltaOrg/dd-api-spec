#%RAML 1.0
title: Digital Delta API
version: 1.0
securitySchemes:
  basic:
    type: OAuth 2.0
baseUri: https://digitaldeltatest.aquadesk.nl
mediaType: [ application/json ]
description: Digital Delta API
documentation:
 - title: Introduction
   content: !include Documentation/Introduction.md
 - title: The API specification
   content: !include Documentation/The_API_Specification.md
 - title: The RAML standard and Universal unique identifiers
   content: !include Documentation/The_RAML_standard_and_Universal_unique_identifiers.md
 - title: About the examples in this document
   content: !include Documentation/About_The_Samples.md
 - title: Future enhancements
   content: !include Documentation/Future_Enhancements.md
 - title: Future research
   content: !include Documentation/Future_Research.md
 - title: Document history
   content: !include Documentation/Document_History.md
uses: # Minimal types and definitions
  Base: Libraries/BaseTypes.raml
  ListResponses: Libraries/ListResponses.raml

protocols:
  - HTTPS

# APIs
/datasources:
  description: The Datasources endpoint can return the datasources that the provider offers. Filtering&colon; uuid and name.
    <h3>About Datasource</h3>
    <p>DataSource (“bronhouder” in Dutch) objects describe the source of the data. A node can have multiple data sources.</p>
  get:
    queryParameters:
      name:
        required: false
        type: string
        example: AquaDesk DD Primary
      page:
        description: Page number.
        required: false
        type: integer
        minimum: 1
        example: 1
      pageSize:
        description: Page size.
        required: false
        type: integer
        minimum: 1
        maximum: 10000
        example: 10
    responses:
      200:
        body:
          application/json:
            type: ListResponses.DatasourceListResponse
            example: {
              "count": 1,
              "previous": null,
              "next": null,
              "maxPageSize": 100000,
              "results": [
                {
                  "uuid": "978fdf5c-95c8-43a5-82ff-d27d9e6d685f",
                  "name": "AquaDesk DD Primary",
                  "node": {
                    "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                    "name": "AquaDesk Primary",
                    "description": "AquaDesk Primary Node",
                    "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                  }
                }
              ]
            }
      204:
        body:
          application/json:
            type: object

  /{uuid}:
    description: Request a specific datasource by its uuid.
    uriParameters:
      uuid:
        type: string
        pattern: "[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}"
        description: Unique identifier for the datasource. Version 4.
        example: 978fdf5c-95c8-43a5-82ff-d27d9e6d685f
    get:
      responses:
        200:
          body:
            application/json:
              type: Base.Datasource
              example: {
                "uuid": "978fdf5c-95c8-43a5-82ff-d27d9e6d685f",
                "name": "AquaDesk DD Primary",
                "node": {
                  "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                  "name": "AquaDesk Primary",
                  "description": "AquaDesk Primary Node",
                  "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                }
              }
        404:
          body:
            application/json:
              type: object
              example: {"message": "Invalid data source"}

/nodes:
  description: The Nodes endpoint can return the nodes that the provider offers. Filtering&colon; uuid and name.
    <h3>About Node</h3>
    <p>Node objects contain the properties of the data node. A node is an operational implementation of the Digital Delta specification.</p>
  get:
    queryParameters:
      name:
        required: false
        type: string
        description: The (partial) name of the node.
        example: AquaDeskPrimaryNode
      page:
        description: Page number.
        required: false
        type: integer
        minimum: 1
        example: 1
      pageSize:
        description: Page size.
        required: false
        type: integer
        minimum: 1
        maximum: 10000
        example: 10
    responses:
      200:
        body:
          application/json:
            type: ListResponses.NodeListResponse
            example: {
              "count": 1,
              "previous": null,
              "next": null,
              "maxPageSize": 100000,
              "results": [
                {
                  "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                  "name": "AquaDeskPrimaryNode",
                  "description": "Primary node for the AquaDesk RWS service.",
                  "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                }
              ]
            }
      204:
        body:
          application/json:
            type: object

  /{uuid}:
    description: Request a specific node by its uuid.
    uriParameters:
      uuid:
        type: string
        description: Unique identifier for the node. Version 4.
        example: f4af47f5-f087-494c-9b2d-ba129bddd545
    get:
      responses:
        200:
          body:
            application/json:
              type: Base.Node
              example: {
                "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                "name": "AquaDeskPrimaryNode",
                "description": "Primary node for the AquaDesk RWS service.",
                "baseUrl": "https://digitaldeltatest.aquadesk.nl"
              }
        404:
          body:
            application/json:
              type: object
              example:
                {"message": "Invalid node source"}

/observationtypes:
  description: The ObservationTypes endpoint can return the observationtypes that the provider offers. Filtering&colon; list of parameters.
    <h3>About ObservationType</h3>
    <p>The ObservationType objects describe all attributes to correctly interpret what has been measured, and in what way. It is essential to have the quantity field.</p>
  get:
    queryParameters:
      quantity:
        description: Retrieve only observation types that contain the specified quantity.
        required: false
        type: string
      parameterCode:
        description: Retrieve only observation types that contain the specified parameter code.
        required: false
        type: string
      page:
        description: Page number.
        required: false
        type: integer
        minimum: 1
        example: 1
      pageSize:
        description: Page size.
        required: false
        type: integer
        minimum: 1
        maximum: 10000
        example: 10
    responses:
      200:
        body:
          application/json:
            type: ListResponses.ObservationTypeListResponse
            example: {
              "count": 674,
              "previous": null,
              "next": "https://digitaldeltatest.aquadesk.nl/observationtypes?page=2&pagesize=2",
              "maxPageSize": 100000,
              "results": [
                {
                  "uuid": "1f9f13c0-d45a-4031-9231-09235d81481e",
                  "quantity": "AANTL",
                  "unit": "n/ml",
                  "parameterCode": "Acanthoceras zachariasii",
                  "compartment": "OW",
                  "qualifier": "CE",
                  "extra": [
                    {
                      "key": "taxongroup",
                      "value": "DIATM"
                    },
                    {
                      "key": "type",
                      "value": "Biotaxon"
                    }
                  ]
                },
                {
                  "uuid": "75c234ef-8182-4948-a593-3c0b4c1a8308",
                  "quantity": "AANTL",
                  "unit": "n/ml",
                  "parameterCode": "Achnanthales",
                  "compartment": "OW",
                  "qualifier": "CE",
                  "extra": [
                    {
                      "key": "taxongroup",
                      "value": "DIATM"
                    },
                    {
                      "key": "type",
                      "value": "Biotaxon"
                    }
                  ]
                }
              ]
            }
      204:
        body:
          application/json:
            type: object

  /{qualifier}:
    description: Request a specific observation type by its qualifier.<br/>
      <b><i>Since almost no specific ObservationTypes for biological entities exist in Aquo, AquaDesk is using uuids instead of the code. The type 'String' is used in both circumstances.</i></b>
    uriParameters:
      qualifier:
        type: string
        description: The qualifier (or uuid for AquaDesk) identifying the observation type.
    get:
      responses:
        200:
          body:
            application/json:
              type: Base.ObservationType
              example: {
                "uuid": "1f9f13c0-d45a-4031-9231-09235d81481e",
                "quantity": "AANTL",
                "unit": "n/ml",
                "parameterCode": "Acanthoceras zachariasii",
                "compartment": "OW",
                "qualifier": "CE",
                "extra": [
                  {
                    "key": "taxongroup",
                    "value": "DIATM"
                  },
                  {
                    "key": "type",
                    "value": "Biotaxon"
                  }
                ]
              }
        404:
          body:
            application/json:
              type: object
              example: {"message": "Invalid observation type source"}

/locations:
  description: The Locations endpoint can return the locations that the provider offers. Filtering&colon; bounding box, uuid, code, name and node.
    <h3>About Locations</h3>
    <p>A location object contains all information required to describe a location. This version contains a node.</p>
  get:
    queryParameters:
      boundingBox:
        description: Bounding box representing a rectangle in which the locations must lie. This is represented by 4 doubles, separated by commas.<br/>
         Example&colon; boundingBox=minLon,minLat,maxLon,maxLat<br/>
          Where&colon; <br/>
           <b>minLon&colon;</b> minimum longitude in decimal degrees (WGS84)<br/>
           <b>minLat&colon;</b> minimum lattitude in decimal degrees (WGS84)<br/>
           <b>maxLon&colon;</b> maximum longitude in decimal degrees (WGS84)<br/>
           <b>maxLat&colon;</b> maximum lattitude in decimal degrees (WGS84)<br/>
        required: false
        type: string
        example: 4.8,52.0,5.8,54.0
      name:
        required: false
        type: string
        description: (Partial) location name.
        example: NEDHMT
      node:
        required: false
        type: string
        description: Uuid of the node.
        example: f4af47f5-f087-494c-9b2d-ba129bddd545
      code:
        required: false
        type: string
        description: Location code.
        example: NLWATB-RWTS_AFGDM_0001
      page:
        description: Page number.
        required: false
        type: integer
        minimum: 1
        example: 1
      pageSize:
        description: Page size.
        required: false
        type: integer
        minimum: 1
        maximum: 10000
        example: 10
    responses:
      200:
        body:
          application/json:
            type: ListResponses.LocationListResponse
            example: {
              "count": 795,
              "previous": null,
              "next": "https://digitaldeltatest.aquadesk.nl/locations?page=2&pagesize=10",
              "maxPageSize": 100000,
              "results": [
                {
                  "uuid": "ed0655e7-ced5-42ad-ac42-b9b96639307c",
                  "url": "https://digitaldeltatest.aquadesk.nl/locations/ed0655e7-ced5-42ad-ac42-b9b96639307c",
                  "code": "NLWATB-RWTS_AFGDM_0001",
                  "name": "NEDHMT",
                  "geometry": {
                    "type": "Point",
                    "coordinates": [
                      5.15835627200311,
                      51.7581204207227,
                      0
                    ]
                  },
                  "node": {
                    "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                    "name": "AquaDesk Primary",
                    "description": "AquaDesk Primary Node",
                    "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                  }
                },
                {
                  "uuid": "4d58d630-ac4e-4eb3-bff4-1b17c7b77630",
                  "url": "https://digitaldeltatest.aquadesk.nl/locations/4d58d630-ac4e-4eb3-bff4-1b17c7b77630",
                  "code": "NLWATB-RWTS_AFGDM_0002",
                  "name": "VEEN",
                  "geometry": {
                    "type": "Point",
                    "coordinates": [
                      5.11187400090377,
                      51.7800422641779,
                      0
                    ]
                  },
                  "node": {
                    "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                    "name": "AquaDesk Primary",
                    "description": "AquaDesk Primary Node",
                    "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                  }
                }
              ]
            }
      204:
        body:
          application/json:
            type: object

  /{uuid}:
    description: Request a specific location by its uuid.
    uriParameters:
      uuid:
        type: string
        pattern: "[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}"
        description: Unique identifier for the location. Version 4.
        example: ed0655e7-ced5-42ad-ac42-b9b96639307c
    get:
      responses:
        200:
          body:
            application/json:
              type: Base.Location
              example: {
                "uuid": "ed0655e7-ced5-42ad-ac42-b9b96639307c",
                "url": "https://digitaldeltatest.aquadesk.nl/locations/ed0655e7-ced5-42ad-ac42-b9b96639307c",
                "code": "NLWATB-RWTS_AFGDM_0001",
                "name": "NEDHMT",
                "geometry": {
                  "type": "Point",
                  "coordinates": [
                    5.15835627200311,
                    51.7581204207227,
                    0
                  ]
                },
                "node": {
                  "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                  "name": "AquaDesk Primary",
                  "description": "AquaDesk Primary Node",
                  "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                }
              }
        404:
          body:
            application/json:
              type: object
              example: |
                {"message": "Invalid location code"}

  post:
    body:
      application/json:
        type: ListResponses.LocationPostRequest
        example: { code: [ "NLWATB-RWTS_AFGDM_0001", "NLWATB-RWTS_AFGDM_0002"] }
    responses:
      200:
        body:
          application/json:
            type: ListResponses.LocationListResponse
            example: {
              "count": 795,
              "previous": null,
              "next": "https://digitaldeltatest.aquadesk.nl/locations?page=2&pageSize=10",
              "maxPageSize": 100000,
              "results": [
                {
                  "uuid": "ed0655e7-ced5-42ad-ac42-b9b96639307c",
                  "url": "https://digitaldeltatest.aquadesk.nl/locations/ed0655e7-ced5-42ad-ac42-b9b96639307c",
                  "code": "NLWATB-RWTS_AFGDM_0001",
                  "name": "NEDHMT",
                  "geometry": {
                    "type": "Point",
                    "coordinates": [
                      5.15835627200311,
                      51.7581204207227,
                      0
                    ]
                  },
                  "node": {
                    "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                    "name": "AquaDesk Primary",
                    "description": "AquaDesk Primary Node",
                    "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                  }
                },
                {
                  "uuid": "4d58d630-ac4e-4eb3-bff4-1b17c7b77630",
                  "url": "https://digitaldeltatest.aquadesk.nl/locations/4d58d630-ac4e-4eb3-bff4-1b17c7b77630",
                  "code": "NLWATB-RWTS_AFGDM_0002",
                  "name": "VEEN",
                  "geometry": {
                    "type": "Point",
                    "coordinates": [
                      5.11187400090377,
                      51.7800422641779,
                      0
                    ]
                  },
                  "node": {
                    "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                    "name": "AquaDesk Primary",
                    "description": "AquaDesk Primary Node",
                    "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                  }
                }
              ]
            }
      204:
        body:
          application/json:
            type: object

      404:
        body:
          application/json:
            type: object
            example: |
              {"message": "Invalid filters"}

/timeseries:
  description:
    The timeseries endpoint can return both the metadata and the data itself. If a start&dash; and endtime is given in the request, the data is added to the response, for both the List and the Detail requests. Furthermore, it is possible to only retrieve the data (without the metadata) by querying the data endpoint&colon; /timeseries/{uuid}/data/.<br/>
    <i><b>Optional&colon; add start and end filter, returns metadata and data (values)</b></i><br/>
    Filtering&colon; value type, uuid, code, node, timeseries type, observation type, location name, start- and enddate.<br/>
    <h3>About Timeseries</h3>
    <p>Timeseries objects contain all information needed to interpret timeseries.<br/>
    There are references to other objects, such as Node, Location, DataSource, ObservationType and TimeseriesType.<br/>
    The TimeseriesType should be added as a reference because it can indicate if a timeseries containts a RAW dataset or makes use of the current measurements.
    The Digital Delta specification of timeseries makes no assumptions on the nature of the series, timeseries may describe any series of data points of the same observation type and datasource in time on one location. <br/>
    This includes both equidistant series (fixed time interval between data points) and non-equidistant series (with varying time interval).</p>
    <h3>Use case&colon;</h3>
    <p>Imagine a data-source is providing several timeseries for a specific location and observation. For example&colon;<br/>
    Waterlevel is measured every 5 minutes for the location Lobith.
    This is the original timeseries from the datasource and we can call it the RAW timeseries or the original timeseries.<br/>
    Within the same data-souce, again, waterlevel is measured every 5 minutes for the same location, but this timeseries is a manually or automatically validated timeseries. So in this case we have an original timeseries which is providing the raw data and another timeseries which has been validated. Both timeseries can be required for different purposes.<br/>
    Now imagine that someone requires the validated timeseries instead of the original. <br/>
    The users should be able to filter them based on this information and retreve data only for this type of timeseries. There are several more uses cases where more than two types are used. Think of timeseries that are recalculated based on validation, interval, aggregation, etc.<br/><br/>
    Using TimeseriesType is providing more flexibility in providing multiple timeseries for the same location and observation type provided by a single data-source.</p>
  get:
    queryParameters:
      start:
        type: datetime
        required: false
        description: Retrieve measurements that are measured on or after this date and time.
        example: 2015-01-01T00:00:00Z
      end:
        type: datetime
        required: false
        description: Retrieve measurements that are measured before or on this date and time. Uses the Zulu notation.
        example: 2016-12-31T23:59:59Z
      locationCode:
        type: string
        required: false
        description: Retrieve measurements that were measured at a location with a name like the location code.
        example: VEEN
      observationType:
        type: string
        required: false
        description: Unique identifier of the observation type.
        example: 1f9f13c0-d45a-4031-9231-09235d81481e
      timeseriesType:
        type: string
        required: false
        description: Code of the time series. AquaDesk only supports MEAS.
        example: MEAS
      node:
        required: false
        type: string
        description: Unique identifier of the node.
        example: f4af47f5-f087-494c-9b2d-ba129bddd545
      valueType:
        type: string
        required: false
        description: Value type.
        example: float
      page:
        description: Page number.
        required: false
        type: integer
        minimum: 1
        example: 1
      pageSize:
        description: Page size.
        required: false
        type: integer
        minimum: 1
        maximum: 10000
        example: 10
      qualifier:
        description: Filter for the optional qualifier property.
        required: false
        type: string
        example: H.meting
    responses:
      200:
        body:
          application/json:
            type: ListResponses.TimeseriesListResponse
            example: {
              "count": 48751,
              "previous": null,
              "next": "https://digitaldeltatest.aquadesk.nl/timeseries?page=2&pagesize=2",
              "maxPageSize": 100000,
              "results": [
                {
                  "url": "https://digitaldeltatest.aquadesk.nl/timeseries/e9ede034-f254-4855-b1ea-fe715c382935",
                  "uuid": "e9ede034-f254-4855-b1ea-fe715c382935",
                  "location": {
                    "uuid": "6fba498f-0b59-462b-8c34-bd456d8e7d31",
                    "url": "https://digitaldeltatest.aquadesk.nl/locations/6fba498f-0b59-462b-8c34-bd456d8e7d31",
                    "code": "NLWATB-RWTS_BERMS_0002",
                    "name": "KEIZVR",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        4.89443671141974,
                        51.7201856231622,
                        0
                      ]
                    },
                    "node": {
                      "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                      "name": "AquaDesk Primary",
                      "description": "AquaDesk Primary Node",
                      "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                    }
                  },
                  "observationType": {
                    "uuid": "297d7ba6-d5e0-4683-849a-5246a3aa83c4",
                    "quantity": "AANTL",
                    "unit": "n/ml",
                    "parameterCode": "Achnanthidium",
                    "compartment": "OW",
                    "qualifier": "CE",
                    "extra": [
                      {
                        "key": "taxongroup",
                        "value": "DIATM"
                      },
                      {
                        "key": "type",
                        "value": "Biotaxon"
                      }
                    ]
                  },
                  "node": {
                    "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                    "name": "AquaDesk Primary",
                    "description": "AquaDesk Primary Node",
                    "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                  },
                  "datasource": {
                    "uuid": "978fdf5c-95c8-43a5-82ff-d27d9e6d685f",
                    "name": "AquaDesk Primary",
                    "node": {
                      "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                      "name": "AquaDesk Primary",
                      "description": "AquaDesk Primary Node",
                      "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                    }
                  },
                  "timeseriesType": {
                    "code": "MEAS",
                    "name": "Measurements"
                  },
                  "interval": null,
                  "valueType": "float",
                  "start": "2005-02-14T23:00:00Z",
                  "end": "2005-02-14T23:00:00Z",
                  "events": null
                },
                {
                  "url": "https://digitaldeltatest.aquadesk.nl/timeseries/db9544e4-1eb3-4f99-ac6e-b9c02a7cca88",
                  "uuid": "db9544e4-1eb3-4f99-ac6e-b9c02a7cca88",
                  "location": {
                    "uuid": "6fba498f-0b59-462b-8c34-bd456d8e7d31",
                    "url": \null\,
                    "code": "NLWATB-RWTS_BERMS_0002",
                    "name": "KEIZVR",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        4.89443671141974,
                        51.7201856231622,
                        0
                      ]
                    },
                    "node": {
                      "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                      "name": "AquaDesk Primary",
                      "description": "AquaDesk Primary Node",
                      "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                    }
                  },
                  "observationType": {
                    "uuid": "5cd9726e-7985-4789-9674-22bec8bef325",
                    "quantity": "AANTL",
                    "unit": "n/ml",
                    "parameterCode": "Actinocyclus normanii",
                    "compartment": "OW",
                    "qualifier": "CE",
                    "extra": [
                      {
                        "key": "taxongroup",
                        "value": "DIATM"
                      },
                      {
                        "key": "type",
                        "value": "Biotaxon"
                      }
                    ]
                  },
                  "node": {
                    "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                    "name": "AquaDesk Primary",
                    "description": "AquaDesk Primary Node",
                    "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                  },
                  "datasource": {
                    "uuid": "978fdf5c-95c8-43a5-82ff-d27d9e6d685f",
                    "name": "AquaDesk Primary",
                    "node": {
                      "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                      "name": "AquaDesk Primary",
                      "description": "AquaDesk Primary Node",
                      "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                    }
                  },
                  "timeseriesType": {
                    "code": "MEAS",
                    "name": "Measurements"
                  },
                  "interval": null,
                  "valueType": "float",
                  "start": "2004-08-30T22:00:00Z",
                  "end": "2004-08-30T22:00:00Z",
                  "events": null
                }
              ]
            }
      204:
        body:
          application/json:
            type: object
      400:
        body:
          application/json:
            type: object
            example: |
              {"message": "Invalid filters"}
  post: # post bodies define filters
    body:
      application/json:
        type: ListResponses.TimeseriesPostRequest
        example: { code: [ "H.Meting" ], start: "2012-01-01", end: "2013-01-01"}
    responses:
      200:
        body:
          application/json:
            type: ListResponses.TimeseriesListResponse
            example: {
              "count": 48751,
              "previous": null,
              "next": "https://digitaldeltatest.aquadesk.nl/timeseries?page=2&pagesize=2",
              "maxPageSize": 100000,
              "results": [
                {
                  "url": "https://digitaldeltatest.aquadesk.nl/timeseries/e9ede034-f254-4855-b1ea-fe715c382935",
                  "uuid": "e9ede034-f254-4855-b1ea-fe715c382935",
                  "location": {
                    "uuid": "6fba498f-0b59-462b-8c34-bd456d8e7d31",
                    "url": "https://digitaldeltatest.aquadesk.nl/locations/6fba498f-0b59-462b-8c34-bd456d8e7d31",
                    "code": "NLWATB-RWTS_BERMS_0002",
                    "name": "KEIZVR",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        4.89443671141974,
                        51.7201856231622,
                        0
                      ]
                    },
                    "node": {
                      "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                      "name": "AquaDesk Primary",
                      "description": "AquaDesk Primary Node",
                      "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                    }
                  },
                  "observationType": {
                    "uuid": "297d7ba6-d5e0-4683-849a-5246a3aa83c4",
                    "quantity": "AANTL",
                    "unit": "n/ml",
                    "parameterCode": "Achnanthidium",
                    "compartment": "OW",
                    "qualifier": "CE",
                    "extra": [
                      {
                        "key": "taxongroup",
                        "value": "DIATM"
                      },
                      {
                        "key": "type",
                        "value": "Biotaxon"
                      }
                    ]
                  },
                  "node": {
                    "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                    "name": "AquaDesk Primary",
                    "description": "AquaDesk Primary Node",
                    "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                  },
                  "datasource": {
                    "uuid": "978fdf5c-95c8-43a5-82ff-d27d9e6d685f",
                    "name": "AquaDesk Primary",
                    "node": {
                      "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                      "name": "AquaDesk Primary",
                      "description": "AquaDesk Primary Node",
                      "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                    }
                  },
                  "timeseriesType": {
                    "code": "MEAS",
                    "name": "Measurements"
                  },
                  "interval": null,
                  "valueType": "float",
                  "start": "2005-02-14T23:00:00Z",
                  "end": "2005-02-14T23:00:00Z",
                  "events": null
                },
                {
                  "url": "https://digitaldeltatest.aquadesk.nl/timeseries/db9544e4-1eb3-4f99-ac6e-b9c02a7cca88",
                  "uuid": "db9544e4-1eb3-4f99-ac6e-b9c02a7cca88",
                  "location": {
                    "uuid": "6fba498f-0b59-462b-8c34-bd456d8e7d31",
                    "url": \null\,
                    "code": "NLWATB-RWTS_BERMS_0002",
                    "name": "KEIZVR",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        4.89443671141974,
                        51.7201856231622,
                        0
                      ]
                    },
                    "node": {
                      "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                      "name": "AquaDesk Primary",
                      "description": "AquaDesk Primary Node",
                      "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                    }
                  },
                  "observationType": {
                    "uuid": "5cd9726e-7985-4789-9674-22bec8bef325",
                    "quantity": "AANTL",
                    "unit": "n/ml",
                    "parameterCode": "Actinocyclus normanii",
                    "compartment": "OW",
                    "qualifier": "CE",
                    "extra": [
                      {
                        "key": "taxongroup",
                        "value": "DIATM"
                      },
                      {
                        "key": "type",
                        "value": "Biotaxon"
                      }
                    ]
                  },
                  "node": {
                    "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                    "name": "AquaDesk Primary",
                    "description": "AquaDesk Primary Node",
                    "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                  },
                  "datasource": {
                    "uuid": "978fdf5c-95c8-43a5-82ff-d27d9e6d685f",
                    "name": "AquaDesk Primary",
                    "node": {
                      "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                      "name": "AquaDesk Primary",
                      "description": "AquaDesk Primary Node",
                      "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                    }
                  },
                  "timeseriesType": {
                    "code": "MEAS",
                    "name": "Measurements"
                  },
                  "interval": null,
                  "valueType": "float",
                  "start": "2004-08-30T22:00:00Z",
                  "end": "2004-08-30T22:00:00Z",
                  "events": null
                }
              ]
            }
      204:
        body:
          application/json:
            type: object

      400:
        body:
          application/json:
            type: object
            example: |
              {"message": "Invalid filters"}

  /{uuid}:
    description: Get the data of one timeseries, including metadata.
    uriParameters:
      uuid:
        type: string
        description: Unique identifier for the timeseries. Version 4.
        example: db9544e4-1eb3-4f99-ac6e-b9c02a7cca88
    get:
      responses:
        200:
          body:
            application/json:
              type: Base.Timeseries
              example: {
                "url": "https://digitaldeltatest.aquadesk.nl/timeseries/db9544e4-1eb3-4f99-ac6e-b9c02a7cca88",
                "uuid": "db9544e4-1eb3-4f99-ac6e-b9c02a7cca88",
                "location": {
                  "uuid": "6fba498f-0b59-462b-8c34-bd456d8e7d31",
                  "url": "https://digitaldeltatest.aquadesk.nl/locations/6fba498f-0b59-462b-8c34-bd456d8e7d31",
                  "code": "NLWATB-RWTS_BERMS_0002",
                  "name": "KEIZVR",
                  "geometry": {
                    "type": "Point",
                    "coordinates": [
                      4.89443671141974,
                      51.7201856231622,
                      0
                    ]
                  },
                  "node": {
                    "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                    "name": "AquaDesk Primary",
                    "description": "AquaDesk Primary Node",
                    "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                  }
                },
                "observationType": {
                  "uuid": "5cd9726e-7985-4789-9674-22bec8bef325",
                  "quantity": "AANTL",
                  "unit": "n/ml",
                  "parameterCode": "Actinocyclus normanii",
                  "compartment": "OW",
                  "qualifier": "CE",
                  "extra": [
                    {
                      "key": "taxongroup",
                      "value": "DIATM"
                    },
                    {
                      "key": "type",
                      "value": "Biotaxon"
                    }
                  ]
                },
                "node": {
                  "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                  "name": "AquaDesk Primary",
                  "description": "AquaDesk Primary Node",
                  "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                },
                "datasource": {
                  "uuid": "978fdf5c-95c8-43a5-82ff-d27d9e6d685f",
                  "name": "AquaDesk Primary",
                  "node": {
                    "uuid": "f4af47f5-f087-494c-9b2d-ba129bddd545",
                    "name": "AquaDesk Primary",
                    "description": "AquaDesk Primary Node",
                    "baseUrl": "https://digitaldeltatest.aquadesk.nl"
                  }
                },
                "timeseriesType": {
                  "code": "MEAS",
                  "name": "Measurements"
                },
                "interval": null,
                "valueType": "float",
                "start": "2004-08-30T22:00:00Z",
                "end": "2004-08-30T22:00:00Z",
                "events": [
                  {
                    "value": 13.81,
                    "timeStamp": "2004-08-30T22:00:00Z"
                  }
                ]
              }
        204:
          body:
            application/json:
              type: object
        400:
          body:
            application/json:
              type: object
              example: |
                {"message": "Invalid time series"}

    /data:
      description: Get the detail data for the specified timeseries, excluding metadata.
      get:
        queryParameters:
          start:
            type: date-only
            required: false
            example: 2016-01-01
            description: Format&colon; yyyy-MM-dd.
          end:
            type: date-only
            required: false
            example: 2016-12-31
            description: Format&colon; yyyy-MM-dd.
        responses:
          200:
            body:
              application/json:
                type: Base.Event[]
                example: [
                  {
                    "value": 13.81,
                    "timeStamp": "2004-08-30T22:00:00Z",
                    "quality": "",
                    "limitSymbol": null
                  }
                ]
          400:
            body:
              application/json:
                type: object
                example: |
                  {"message": "Invalid time series"}
